---
import BaseLayout from "@layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";

// Fetch animals server-side
let animals = [];
let error = null;

try {
  // Use the same API endpoint that works
  const response = await fetch(`${Astro.url.origin}/api/admin/animals?orgId=9`);
  if (response.ok) {
    animals = await response.json();
    console.log('✅ Server-side fetch successful:', animals.length, 'animals');
  } else {
    throw new Error(`HTTP ${response.status}`);
  }
} catch (e) {
  console.error('❌ Server-side fetch failed:', e);
  error = e.message;
}

const adoptedAnimals = animals.filter((animal) => (animal.status || '').toLowerCase() === 'adopted');
const availableAnimals = animals.filter((animal) => (animal.status || '').toLowerCase() === 'available' || !(animal.status));
---

<BaseLayout
  title="Mission Bay Puppy Rescue - Our Animals Available for Adoption"
  description="Meet our wonderful animals looking for their forever homes. Browse available dogs, cats, and other pets ready for adoption."
>
  <!-- ============================================ -->
  <!--                 Page Header                  -->
  <!-- ============================================ -->
  
  <section id="page-header">
    <div class="cs-container">
      <h1 class="cs-title">Our Animals</h1>
      <p class="cs-text">
        Meet our wonderful animals who are looking for their forever homes. Each pet has been health-checked, 
        vaccinated, and is ready to become a beloved family member.
      </p>
    </div>
  </section>

  <!-- ============================================ -->
  <!--                Animal Filters               -->
  <!-- ============================================ -->
  
  <section id="animal-filters">
    <div class="cs-container">
      <div class="cs-filter-group">
        <button class="cs-filter-button active" data-filter="all">All Animals</button>
        <button class="cs-filter-button" data-filter="dogs">Dogs</button>
        <button class="cs-filter-button" data-filter="cats">Cats</button>
        <button class="cs-filter-button" data-filter="available">Available</button>
        <button class="cs-filter-button" data-filter="special-needs">Special Needs</button>
      </div>
    </div>
  </section>

  <!-- ============================================ -->
  <!--                Animal Grid                   -->
  <!-- ============================================ -->

  <section id="animal-grid">
    <div class="cs-container">


      <!-- Server-side Rendered Animals -->
      {error ? (
        <div class="cs-error">
          <p>Sorry, we're having trouble loading our animals right now. Please try again later.</p>
          <p>Error: {error}</p>
        </div>
      ) : availableAnimals.length === 0 ? (
        <div class="cs-loading">
          <p>No animals are currently available for adoption. Please check back soon!</p>
        </div>
      ) : (
        <div class="cs-card-group">
          {availableAnimals.map((animal) => {
            const imageUrl = animal.image_url || animal.main_image?.url || '/assets/images/animals/placeholder.jpg';
            const status = animal.status || 'Available';
            const description = animal.description || animal.My_Story || '';
            const shortDescription = description.length > 150 ? description.substring(0, 150) + '...' : description;

            return (
              <div class="cs-item" data-category={`${animal.species || 'dog'} ${status.toLowerCase()} ${animal.special_needs ? 'special-needs' : ''}`}>
                <picture class="cs-picture">
                  <img
                    loading="lazy"
                    decoding="async"
                    src={imageUrl}
                    alt={animal.name || animal.Dog_Name}
                  />
                  <div class={`cs-status-badge cs-status-${status.toLowerCase()}`}>
                    {status}
                  </div>
                </picture>

                <div class="cs-item-content">
                  <h3 class="cs-item-title">{animal.name || animal.Dog_Name}</h3>
                  <div class="cs-item-details">
                    <span class="cs-detail">{animal.breed || animal.Breed || 'Mixed'}</span>
                    <span class="cs-detail">{animal.age || 'Unknown age'}</span>
                    <span class="cs-detail">{animal.gender || animal.Gender || 'Unknown'}</span>
                    <span class="cs-detail">{animal.size || animal.Estimated_Size_When_Grown || 'Unknown size'}</span>
                  </div>

                  <p class="cs-item-text">{shortDescription}</p>

                  <div class="cs-compatibility">
                    <h4>Good with:</h4>
                    <div class="cs-compatibility-tags">
                      {animal.good_with_kids && <span class="cs-tag">Kids</span>}
                      {animal.good_with_cats && <span class="cs-tag">Cats</span>}
                      {animal.good_with_dogs && <span class="cs-tag">Dogs</span>}
                      {(!animal.good_with_kids && !animal.good_with_cats && !animal.good_with_dogs) && <span class="cs-tag">Ask us!</span>}
                    </div>
                  </div>

                  <div class="cs-button-group">
                    <a href={`/animal-details/${animal.id}`} class="cs-button-solid">Learn More</a>
                    <a href="/applications" class="cs-button-transparent">Apply to Adopt</a>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      )}

      {adoptedAnimals.length > 0 && (
        <section id="adopted-gallery">
          <div class="cs-gallery-header">
            <h2>Recently Adopted</h2>
            <p>Celebrating the pets who have found their forever families.</p>
          </div>
          <div class="cs-gallery-scroll">
            {adoptedAnimals.map((animal) => {
              const imageUrl = animal.image_url || animal.main_image?.url || '/assets/images/animals/placeholder.jpg';

              return (
                <figure class="cs-gallery-item">
                  <img
                    src={imageUrl}
                    alt={animal.name || 'Adopted pet'}
                    loading="lazy"
                  />
                  <figcaption>
                    <span class="cs-gallery-name">{animal.name || 'Adopted Friend'}</span>
                    {(animal.breed || animal.Breed) && (
                      <span class="cs-gallery-breed">{animal.breed || animal.Breed}</span>
                    )}
                  </figcaption>
                </figure>
              );
            })}
          </div>
        </section>
      )}

      <div class="cs-more-info">
        <h2>Don't See Your Perfect Match?</h2>
        <p>
          We have more animals in foster care and new arrivals coming in regularly. 
          Contact us to learn about animals that may not be listed yet or to get on our waiting list 
          for specific types of pets.
        </p>
        <a href="/contact" class="cs-button-solid">Contact Us</a>
      </div>
    </div>
  </section>

  <CTA />
</BaseLayout>

<style lang="less">
  /* Page Header */
  #page-header {
    padding: var(--sectionPadding);
    background: linear-gradient(135deg, var(--primary) 0%, var(--primaryDark) 100%);
    color: white;
    text-align: center;
    
    .cs-container {
      max-width: 800px;
      margin: 0 auto;
    }
    
    .cs-title {
      font-size: clamp(2.5rem, 5vw, 4rem);
      margin-bottom: 1rem;
      color: #6cb3eb; /* Change this to your desired color */
    }
    
    .cs-text {
      font-size: 1.125rem;
      line-height: 1.6;
      color: #6cb3eb;
    }
  }

  /* Animal Filters */
  #animal-filters {
    padding: 2rem 0;
    background: #f8f9fa;
    
    .cs-filter-group {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 1rem;
    }
    
    .cs-filter-button {
      padding: 0.75rem 1.5rem;
      border: 2px solid var(--primary);
      background: white;
      color: var(--primary);
      border-radius: 25px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      
      &:hover,
      &.active {
        background: var(--primary);
        color: white;
      }
    }
  }

  /* Adopted Gallery */
  #adopted-gallery {
    margin: 4rem 0;

    .cs-gallery-header {
      text-align: center;
      margin-bottom: 1.5rem;

      h2 {
        font-size: clamp(2rem, 4vw, 3rem);
        color: var(--headerColor);
        margin-bottom: 0.5rem;
      }

      p {
        color: #6b7280;
        font-size: 1rem;
      }
    }

    .cs-gallery-scroll {
      display: flex;
      gap: 1.5rem;
      padding: 0.5rem 0;
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      scrollbar-width: thin;
      scrollbar-color: var(--primary) rgba(0, 0, 0, 0.1);

      &::-webkit-scrollbar {
        height: 8px;
      }

      &::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.05);
        border-radius: 999px;
      }

      &::-webkit-scrollbar-thumb {
        background: var(--primary);
        border-radius: 999px;
      }
    }

    .cs-gallery-item {
      flex: 0 0 220px;
      background: #fff;
      border-radius: 16px;
      box-shadow: 0 12px 30px rgba(15, 23, 42, 0.08);
      overflow: hidden;
      scroll-snap-align: start;
      display: flex;
      flex-direction: column;

      img {
        width: 100%;
        height: 200px;
        object-fit: cover;
      }

      figcaption {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
      }

      .cs-gallery-name {
        font-weight: 700;
        color: var(--headerColor);
      }

      .cs-gallery-breed {
        font-size: 0.9rem;
        color: #6b7280;
      }
    }
  }

  /* Animal Grid */
  #animal-grid {
    padding: var(--sectionPadding);

    .cs-card-group {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 2rem;
      margin-bottom: 4rem;
    }

    .cs-item {
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      transition: transform 0.3s ease, box-shadow 0.3s ease;

      &:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
      }
    }

    .cs-picture {
      position: relative;
      display: block;

      img {
        width: 100%;
        height: 250px;
        object-fit: cover;
      }
    }
    
    .cs-status-badge {
      position: absolute;
      top: 1rem;
      right: 1rem;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      font-weight: 600;
      font-size: 0.875rem;
      
      &.cs-status-available {
        background: #27ae60;
        color: white;
      }
      
      &.cs-status-pending {
        background: #f39c12;
        color: white;
      }
      
      &.cs-status-adopted {
        background: #95a5a6;
        color: white;
      }
    }
    
    .cs-item-content {
      padding: 1.5rem;
      flex: 1;
      display: flex;
      flex-direction: column;
    }
    
    .cs-item-title {
      font-size: 1.5rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
      color: var(--headerColor);
    }
    
    .cs-item-details {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-bottom: 1rem;
    }
    
    .cs-detail {
      background: var(--accent);
      padding: 0.25rem 0.75rem;
      border-radius: 15px;
      font-size: 0.875rem;
      color: var(--bodyTextColor);
    }
    
    .cs-item-text {
      margin-bottom: 1rem;
      line-height: 1.6;
    }
    
    .cs-compatibility {
      margin-bottom: 1.5rem;
      
      h4 {
        font-size: 0.875rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--headerColor);
      }
    }
    
    .cs-compatibility-tags {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }
    
    .cs-tag {
      background: var(--primaryLight);
      color: white;
      padding: 0.25rem 0.75rem;
      border-radius: 12px;
      font-size: 0.75rem;
      font-weight: 500;
    }
    
    .cs-button-group {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
      margin-top: auto;
      padding-top: 1rem;
    }

    .cs-button-group .cs-button-solid,
    .cs-button-group .cs-button-transparent {
      flex: 1 1 (200/16rem);
    }
    
    .cs-more-info {
      text-align: center;
      padding: 3rem 2rem;
      background: var(--accent);
      border-radius: 12px;
      
      h2 {
        margin-bottom: 1rem;
        color: var(--headerColor);
      }
      
      p {
        margin-bottom: 2rem;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
        line-height: 1.6;
      }
    }
  }

  /* Mobile Responsive */
  @media only screen and (max-width: 768px) {
    .cs-card-group {
      grid-template-columns: 1fr;
    }
    
    .cs-filter-group {
      justify-content: center;
    }
    
    .cs-filter-button {
      font-size: 0.875rem;
      padding: 0.5rem 1rem;
    }
    
    .cs-button-group {
      flex-direction: column;
    }
  }

  /* Loading and Error States */
  .cs-loading,
  .cs-error {
    text-align: center;
    padding: 3rem 1rem;
    color: var(--bodyTextColor);
  }

  .cs-loading p,
  .cs-error p {
    font-size: 1.125rem;
    margin: 0;
  }

  .cs-error {
    color: var(--errorColor, #dc2626);
  }
</style>
