---
import { getImage } from "astro:assets";

// TS types
interface Props {
    mobileImgUrl: string | ImageMetadata;
    mobileMediaWidth: string;
    desktopImgUrl: string | ImageMetadata;
    desktopMediaWidth: string;
    fallbackImgUrl: string | ImageMetadata;
    alt: string;
}

const { mobileImgUrl, mobileMediaWidth, desktopImgUrl, desktopMediaWidth, fallbackImgUrl, alt } = Astro.props;

const mobileImg = await getImage({
    src: mobileImgUrl,
    format: "webp",
    width: 1200,
    height: 1200,
});

const desktopImg = await getImage({
    src: desktopImgUrl,
    format: "webp",
    width: 2400,
    height: 1350,
});

const fallbackImg = await getImage({
    src: fallbackImgUrl,
    format: "jpg",
    width: 2400,
    height: 1350,
});
---

<!-- Adjust the width and height attributes sizes based on the stitch you're using -->
<picture>
    <source media=`(max-width: ${mobileMediaWidth})` srcset={mobileImg.src} />
    <source media=`(min-width: ${desktopMediaWidth})` srcset={desktopImg.src} />
    <img
      aria-hidden="true"
      decoding="async"
      src={fallbackImg.src}
      alt={alt}
      loading="lazy"
      width="2500"
      height="1667"
    />
</picture>

<!-- Adjust the styles based on the stitch you're using -->
<style lang="less">
    picture {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -2;

        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            position: absolute;
            top: 0;
            left: 0;
        }
    }
</style>
