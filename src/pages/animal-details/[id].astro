---
import BaseLayout from "@layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";

const SITE_NAME = "{{site.name}}";
const ORGANIZATION_ID = "{{organization.id}}";

// Define the animal interface
interface Animal {
  id: string | number;
  name: string;
  breed: string;
  age: string;
  gender: string;
  size: string;
  weight?: string;
  status?: string;
  description?: string;
  description_long?: string;
  image_url?: string;
  main_image?: { url: string };
  additional_image_1?: { url: string };
  additional_image_2?: { url: string };
  additional_image_3?: { url: string };
  additional_image_4?: { url: string };
  spayed_neutered?: boolean;
  vaccinated?: boolean;
  microchip?: boolean;
  special_needs?: boolean;
  medical_notes?: string;
  good_with_kids?: boolean;
  good_with_cats?: boolean;
  good_with_dogs?: boolean;
  energy_level?: string;
  house_trained?: boolean;
}

// Generate static paths for all animals
export async function getStaticPaths() {
  const fallbackIds = ['luna', 'max'];

  try {
    const response = await fetch(`http://localhost:4321/api/admin/animals?orgId=${ORGANIZATION_ID}`);
    if (response.ok) {
      const animals = await response.json();
      return animals.map((animal: Animal) => ({
        params: { id: animal.id.toString() }
      }));
    }
  } catch (error) {
    console.error('Error fetching animals for static paths, using fallback:', error);
  }

  return fallbackIds.map(id => ({
    params: { id: id.toString() }
  }));
}

const { id } = Astro.params;

let animal: Animal | null = null;
try {
  const response = await fetch(`${Astro.url.origin}/api/admin/animals?orgId=${ORGANIZATION_ID}`);
  if (response.ok) {
    const animals = await response.json();
    animal = animals.find((a: Animal) => a.id.toString() === id);
  }
} catch (error) {
  console.error('Error fetching animal details:', error);
}

const fallbackAnimals: Record<string, Animal> = {
  "luna": {
    id: "luna",
    name: "Luna",
    breed: "Golden Retriever Mix",
    age: "3 years",
    gender: "Female",
    size: "Large",
    weight: "65 lbs",
    status: "Available",
    description: "Luna is a sweet and gentle girl who loves playing fetch and cuddling on the couch. She's been with us for a few months and has shown incredible resilience and love despite her difficult past.",
    image_url: "/assets/images/animals/luna-1.jpg",
    spayed_neutered: true,
    vaccinated: true,
    microchip: true,
    special_needs: false,
    medical_notes: "Healthy and ready for adoption",
    good_with_kids: true,
    good_with_cats: true,
    good_with_dogs: true,
    energy_level: "Medium",
    house_trained: true
  },
  "max": {
    id: "max",
    name: "Max",
    breed: "Domestic Shorthair",
    age: "2 years",
    gender: "Male",
    size: "Medium",
    weight: "12 lbs",
    status: "Available",
    description: "Max is a playful tabby who loves toys and sunny windowsills. He's a curious cat who enjoys exploring and would do well in a home with plenty of enrichment.",
    image_url: "/assets/images/animals/max-1.jpg",
    spayed_neutered: true,
    vaccinated: true,
    microchip: true,
    special_needs: false,
    medical_notes: "Healthy young cat",
    good_with_kids: true,
    good_with_cats: true,
    good_with_dogs: false,
    energy_level: "High",
    house_trained: true
  }
};

if (!animal) {
  animal = fallbackAnimals[id];
}

if (!animal) {
  return Astro.redirect('/404');
}

const safeAnimal = animal as Animal;
---

<BaseLayout
  title={`${SITE_NAME} - Meet ${safeAnimal.name}`}
  description={`Learn more about ${safeAnimal.name}, a ${safeAnimal.age} ${safeAnimal.breed} looking for a loving home. ${safeAnimal.description}`}
>
  <!-- ============================================ -->
  <!--              Animal Details Header           -->
  <!-- ============================================ -->
  
  <section id="animal-header">
    <div class="cs-container">
      <div class="cs-content">
        <div class="cs-image-gallery">
          <div class="cs-main-image">
            <img
              src={safeAnimal.image_url || safeAnimal.main_image?.url || '/assets/images/animals/placeholder.jpg'}
              alt={safeAnimal.name}
              width="600"
              height="400"
              loading="eager"
