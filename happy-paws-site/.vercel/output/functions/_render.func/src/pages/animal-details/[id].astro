---
import BaseLayout from "@layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import { getAnimalById } from "../../lib/xano.js";

// Force server-side rendering to get fresh data on each request
export const prerender = false;

// Get the animal ID from URL params
const { id } = Astro.params;

// Fetch the animal data fresh from Xano on each request
let animal: any = null;
if (id) {
  try {
    animal = await getAnimalById(id);
    console.log(`Loaded animal ${id} from Xano:`, animal?.name);
  } catch (error) {
    console.error(`Error loading animal ${id}:`, error);
  }
}

// Handle case where animal data is not found
if (!animal) {
  return Astro.redirect('/404');
}
---

<BaseLayout
  title={`Happy Paws Dog Rescue - Meet ${animal.name}`}
  description={`Learn more about ${animal.name}, a ${animal.age} ${animal.breed} looking for a loving home. ${animal.description}`}
>
  <!-- ============================================ -->
  <!--              Animal Details Header           -->
  <!-- ============================================ -->
  
  <section id="animal-header">
    <div class="cs-container">
      <div class="cs-content">
        <div class="cs-image-gallery">
          <div class="cs-main-image">
            <img
              src={animal.images[0]}
              alt={animal.name}
              width="600"
              height="400"
              loading="eager"
            />
          </div>
          <div class="cs-thumbnail-gallery">
            {animal.images.map((image: string, index: number) => (
              <img
                src={image}
                alt={`${animal.name} photo ${index + 1}`}
                width="100"
                height="100"
                class={index === 0 ? "active" : ""}
                data-main-src={image}
              />
            ))}
          </div>
        </div>

        <div class="cs-info">
          <div class="cs-status-badge cs-status-{animal.status.toLowerCase()}">
            {animal.status}
          </div>
          <h1 class="cs-title">{animal.name}</h1>
          <div class="cs-basic-info">
            <div class="cs-info-item">
              <strong>Breed:</strong> {animal.breed}
            </div>
            <div class="cs-info-item">
              <strong>Age:</strong> {animal.age}
            </div>
            <div class="cs-info-item">
              <strong>Gender:</strong> {animal.gender}
            </div>
            <div class="cs-info-item">
              <strong>Size:</strong> {animal.size}
            </div>
            <div class="cs-info-item">
              <strong>Weight:</strong> {animal.weight}
            </div>
          </div>

          <p class="cs-description">{animal.description}</p>

          <div class="cs-action-buttons">
            <a href="/applications" class="cs-button-solid">Apply to Adopt {animal.name}</a>
            <a href="/contact" class="cs-button-transparent">Ask About {animal.name}</a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- ============================================ -->
  <!--              Detailed Information            -->
  <!-- ============================================ -->
  
  <section id="animal-details">
    <div class="cs-container">
      <div class="cs-details-grid">
        <!-- Personality -->
        <div class="cs-detail-card">
          <h2>Personality</h2>
          <ul class="cs-personality-list">
            {animal.personality.map((trait: string) => (
              <li>{trait}</li>
            ))}
          </ul>
        </div>

        <!-- Medical Information -->
        <div class="cs-detail-card">
          <h2>Medical Information</h2>
          <div class="cs-medical-info">
            <div class="cs-medical-item">
              <span class="cs-label">Spayed/Neutered:</span>
              <span class={`cs-value ${animal.medicalInfo.spayedNeutered ? 'cs-yes' : 'cs-no'}`}>
                {animal.medicalInfo.spayedNeutered ? 'Yes' : 'No'}
              </span>
            </div>
            <div class="cs-medical-item">
              <span class="cs-label">Vaccinated:</span>
              <span class={`cs-value ${animal.medicalInfo.vaccinated ? 'cs-yes' : 'cs-no'}`}>
                {animal.medicalInfo.vaccinated ? 'Yes' : 'No'}
              </span>
            </div>
            <div class="cs-medical-item">
              <span class="cs-label">Microchipped:</span>
              <span class={`cs-value ${animal.medicalInfo.microchipped ? 'cs-yes' : 'cs-no'}`}>
                {animal.medicalInfo.microchipped ? 'Yes' : 'No'}
              </span>
            </div>
            <div class="cs-medical-item">
              <span class="cs-label">Special Needs:</span>
              <span class={`cs-value ${animal.medicalInfo.specialNeeds ? 'cs-yes' : 'cs-no'}`}>
                {animal.medicalInfo.specialNeeds ? 'Yes' : 'No'}
              </span>
            </div>
            <div class="cs-medical-item">
              <span class="cs-label">Medications:</span>
              <span class="cs-value">{animal.medicalInfo.medicalNotes}</span>
            </div>
            <div class="cs-medical-item">
              <span class="cs-label">Vet Notes:</span>
              <span class="cs-value">{animal.medicalInfo.medicalNotes}</span>
            </div>
          </div>
        </div>
        
        <!-- Compatibility -->
        <div class="cs-detail-card">
          <h2>Compatibility</h2>
          <div class="cs-compatibility-grid">
            <div class="cs-compatibility-item">
              <span class="cs-label">Good with Kids:</span>
              <span class={`cs-value ${animal.goodWithKids ? 'cs-yes' : 'cs-no'}`}>
                {animal.goodWithKids ? 'Yes' : 'No'}
              </span>
            </div>
            <div class="cs-compatibility-item">
              <span class="cs-label">Good with Cats:</span>
              <span class={`cs-value ${animal.goodWithCats ? 'cs-yes' : 'cs-no'}`}>
                {animal.goodWithCats ? 'Yes' : 'No'}
              </span>
            </div>
            <div class="cs-compatibility-item">
              <span class="cs-label">Good with Dogs:</span>
              <span class={`cs-value ${animal.goodWithDogs ? 'cs-yes' : 'cs-no'}`}>
                {animal.goodWithDogs ? 'Yes' : 'No'}
              </span>
            </div>
            <div class="cs-compatibility-item">
              <span class="cs-label">Energy Level:</span>
              <span class="cs-value">{animal.energyLevel}</span>
            </div>
            <div class="cs-compatibility-item">
              <span class="cs-label">Exercise Needs:</span>
              <span class="cs-value">{animal.energyLevel} energy</span>
            </div>
          </div>
        </div>

        <!-- Story -->
        <div class="cs-detail-card cs-story-card">
          <h2>{animal.name}'s Story</h2>
          <p class="cs-story-text">{animal.description}</p>
          <div class="cs-arrival-info">
            <strong>Arrived at our rescue:</strong> {new Date(animal.arrivalDate).toLocaleDateString()}
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- ============================================ -->
  <!--              Adoption Process                -->
  <!-- ============================================ -->
  
  <section id="adoption-process">
    <div class="cs-container">
      <h2 class="cs-section-title">Ready to Adopt {animal.name}?</h2>
      <div class="cs-process-steps">
        <div class="cs-step">
          <div class="cs-step-number">1</div>
          <h3>Submit Application</h3>
          <p>Fill out our adoption application to help us understand your lifestyle and preferences.</p>
        </div>
        <div class="cs-step">
          <div class="cs-step-number">2</div>
          <h3>Meet & Greet</h3>
          <p>Schedule a visit to meet {animal.name} and see if you're a perfect match.</p>
        </div>
        <div class="cs-step">
          <div class="cs-step-number">3</div>
          <h3>Home Check</h3>
          <p>We'll arrange a brief home visit to ensure a safe environment for {animal.name}.</p>
        </div>
        <div class="cs-step">
          <div class="cs-step-number">4</div>
          <h3>Finalize Adoption</h3>
          <p>Complete the adoption paperwork and welcome {animal.name} to their new home!</p>
        </div>
      </div>

      <div class="cs-adoption-cta">
        <a href="/applications" class="cs-button-solid">Start Adoption Process</a>
        <a href="/our-animals" class="cs-button-transparent">View Other Animals</a>
      </div>
    </div>
  </section>

  <CTA />
</BaseLayout>

<style lang="less">
  /* Animal Header */
  #animal-header {
    padding: var(--sectionPadding);

    .cs-container {
      max-width: 1200px;
      margin: 0 auto;
    }

    .cs-content {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 3rem;
      align-items: start;
    }

    .cs-image-gallery {
      .cs-main-image {
        margin-bottom: 1rem;
        border-radius: 12px;
        overflow: hidden;

        img {
          width: 100%;
          height: 400px;
          object-fit: cover;
        }
      }

      .cs-thumbnail-gallery {
        display: flex;
        gap: 0.5rem;

        img {
          width: 80px;
          height: 80px;
          object-fit: cover;
          border-radius: 8px;
          cursor: pointer;
          opacity: 0.7;
          transition: opacity 0.3s ease;

          &.active,
          &:hover {
            opacity: 1;
          }
        }
      }
    }

    .cs-info {
      .cs-status-badge {
        display: inline-block;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.875rem;
        margin-bottom: 1rem;

        &.cs-status-available {
          background: #27ae60;
          color: white;
        }
      }

      .cs-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        color: var(--headerColor);
      }

      .cs-basic-info {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.75rem;
        margin-bottom: 1.5rem;
        padding: 1.5rem;
        background: #f8f9fa;
        border-radius: 12px;
        border: 1px solid #e9ecef;
      }

      .cs-info-item {
        color: var(--bodyTextColor);

        strong {
          color: var(--headerColor);
        }
      }

      .cs-description {
        font-size: 1.125rem;
        line-height: 1.6;
        margin-bottom: 2rem;
        color: var(--bodyTextColor);
      }

      .cs-action-buttons {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
      }
    }
  }

  /* Animal Details */
  #animal-details {
    padding: var(--sectionPadding);
    background: #f8f9fa;

    .cs-details-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .cs-detail-card {
      background: white;
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);

      h2 {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        color: var(--headerColor);
        border-bottom: 2px solid var(--primary);
        padding-bottom: 0.5rem;
      }
    }

    .cs-story-card {
      grid-column: 1 / -1;

      .cs-story-text {
        font-size: 1.125rem;
        line-height: 1.6;
        margin-bottom: 1.5rem;
      }

      .cs-arrival-info {
        padding: 1rem;
        background: #f8f9fa;
        border-radius: 8px;
        font-size: 0.875rem;
        color: var(--bodyTextColor);
        border: 1px solid #e9ecef;
      }
    }

    .cs-personality-list {
      list-style: none;
      padding: 0;

      li {
        padding: 0.75rem;
        margin-bottom: 0.5rem;
        background: #f8f9fa;
        border-radius: 8px;
        border-left: 4px solid var(--primary);
        color: var(--bodyTextColor);
        border: 1px solid #e9ecef;
      }
    }

    .cs-medical-info,
    .cs-compatibility-grid {
      .cs-medical-item,
      .cs-compatibility-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0;
        border-bottom: 1px solid #eee;

        &:last-child {
          border-bottom: none;
        }
      }

      .cs-label {
        font-weight: 600;
        color: var(--headerColor);
      }

      .cs-value {
        &.cs-yes {
          color: #27ae60;
          font-weight: 600;
        }

        &.cs-no {
          color: #e74c3c;
          font-weight: 600;
        }
      }
    }
  }

  /* Adoption Process */
  #adoption-process {
    padding: var(--sectionPadding);
    text-align: center;
    background: #f8f9fa;

    .cs-section-title {
      font-size: 2.5rem;
      margin-bottom: 3rem;
      color: var(--headerColor);
    }

    .cs-process-steps {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 2rem;
      margin-bottom: 3rem;
      max-width: 800px;
      margin-left: auto;
      margin-right: auto;

      @media screen and (max-width: 768px) {
        grid-template-columns: 1fr;
        max-width: 400px;
      }
    }

    .cs-step {
      padding: 2rem;
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);

      .cs-step-number {
        width: 60px;
        height: 60px;
        background: var(--primary);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0 auto 1rem;
      }

      h3 {
        font-size: 1.25rem;
        margin-bottom: 1rem;
        color: var(--headerColor);
      }

      p {
        line-height: 1.6;
        color: var(--bodyTextColor);
      }
    }

    .cs-adoption-cta {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }
  }

  /* Buttons */
  .cs-button-solid,
  .cs-button-transparent {
    padding: 1rem 2rem;
    border-radius: 6px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    min-width: 180px;
    line-height: 1.2;
  }

  .cs-button-solid {
    background: var(--primary);
    color: white !important;
    border: 2px solid var(--primary);

    &:hover {
      background: var(--primaryLight);
      border-color: var(--primaryLight);
      color: white !important;
    }
  }

  .cs-button-transparent {
    background: transparent;
    color: var(--primary) !important;
    border: 2px solid var(--primary);

    &:hover {
      background: var(--primary);
      color: white !important;
    }
  }

  /* Mobile Responsive */
  @media only screen and (max-width: 768px) {
    #animal-header .cs-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .cs-info .cs-title {
      font-size: 2rem;
    }

    .cs-basic-info {
      grid-template-columns: 1fr;
    }

    .cs-action-buttons {
      flex-direction: column;
    }

    .cs-details-grid {
      grid-template-columns: 1fr;
    }

    .cs-process-steps {
      grid-template-columns: 1fr;
    }

    .cs-adoption-cta {
      flex-direction: column;
      align-items: center;
    }
  }
</style>

<script>
  // Image gallery functionality
  document.addEventListener('DOMContentLoaded', function() {
    const thumbnails = document.querySelectorAll('.cs-thumbnail-gallery img');
    const mainImage = document.querySelector('.cs-main-image img') as HTMLImageElement;

    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', function() {
        // Remove active class from all thumbnails
        thumbnails.forEach(thumb => thumb.classList.remove('active'));
        // Add active class to clicked thumbnail
        this.classList.add('active');

        // Update main image
        const newSrc = this.getAttribute('data-main-src');
        if (newSrc && mainImage) {
          mainImage.src = newSrc;
        }
      });
    });
  });
</script>
